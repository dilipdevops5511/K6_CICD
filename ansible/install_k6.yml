---
- name: Install k6 and run tests
  hosts: machines
  become: yes
  vars:
    influxdb_host: "localhost"
    influxdb_port: 8086
    influxdb_database: "k6"
    k6_script: "/home/ubuntu/your-test-script.js"

  tasks:
    - name: Update and install dependencies
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - docker.io  # Adjust this for your distribution as needed
        - curl
        - gnupg

    - name: Start Docker service
      service:
        name: docker
        state: started
        enabled: yes

    - name: Add k6 repository and install k6
      shell: |
        curl -s https://dl.k6.io/key.gpg | sudo apt-key add -
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt update
        sudo apt install k6 -y

    - name: Copy k6 test script to instance
      copy:
        src: your-test-script.js
        dest: /home/ubuntu/your-test-script.js

    - name: Copy split CSV data to instance (part 1)
      copy:
        src: data_part1.csv
        dest: /home/ubuntu/combined.csv

    - name: Copy split CSV data to instance (part 2)
      copy:
        src: data_part2.csv
        dest: /home/ubuntu/combined.csv

    - name: Run k6 test on first segment and save output to JSON file
      shell: |
        k6 run --execution-segment "0:1/2" --execution-segment-sequence "0,1/2,1" --out influxdb=http://{{ influxdb_host }}:{{ influxdb_port }}/{{ influxdb_database }} /home/ubuntu/your-test-script.js --out json=/home/ubuntu/k6_report.json
      register: k6_output
      when: inventory_hostname == 'machine1'

    - name: Run k6 test on second segment and save output to JSON file
      shell: |
        k6 run --execution-segment "1/2:1" --execution-segment-sequence "0,1/2,1" --out influxdb=http://{{ influxdb_host }}:{{ influxdb_port }}/{{ influxdb_database }} /home/ubuntu/your-test-script.js --out json=/home/ubuntu/k6_report.json
      register: k6_output
      when: inventory_hostname == 'machine2'
