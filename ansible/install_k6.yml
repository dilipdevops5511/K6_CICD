---
- name: Install k6 and run tests
  hosts: machines
  become: yes

  tasks:
    - name: Update apt packages cache
      apt:
        update_cache: yes

    - name: Install prerequisites
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - curl
        - gnupg

    - name: Copy k6 test script to instance
      ansible.builtin.copy:
        src: your-test-script.js
        dest: /home/ubuntu/test.js

    - name: Copy split CSV data to instance (part 1)
      ansible.builtin.copy:
        src: data_part1.csv
        dest: /home/ubuntu/data_part1.csv

    - name: Copy split CSV data to instance (part 2)
      ansible.builtin.copy:
        src: data_part2.csv
        dest: /home/ubuntu/data_part2.csv

    - name: Run k6 test and send output to InfluxDB (machine1)
      ansible.builtin.shell:
        cmd: k6 run /home/ubuntu/test.js --out influxdb=http://174.129.72.227:8086/
      async: 1800  # Run the task asynchronously with a timeout of 30 minutes
      poll: 0      # Don't wait for the task to complete
      register: k6_output_1
      environment:
        K6_INFLUXDB_OUTPUT: "http://174.129.72.227:8086/"
      when: inventory_hostname == 'machine1'

    - name: Run k6 test and send output to InfluxDB (machine2)
      ansible.builtin.shell:
        cmd: k6 run /home/ubuntu/test.js --out influxdb=http://174.129.72.227:8086/
      async: 1800  # Run the task asynchronously with a timeout of 30 minutes
      poll: 0      # Don't wait for the task to complete
      register: k6_output_2
      environment:
        K6_INFLUXDB_OUTPUT: "http://174.129.72.227:8086/"
      when: inventory_hostname == 'machine2'

    - name: Wait for k6 test to finish on machine1
      async_status:
        jid: "{{ k6_output_1.ansible_job_id }}"
      register: job_result_1
      until: job_result_1.finished
      retries: 60  # Adjust the number of retries based on your needs
      delay: 30    # Wait for 30 seconds between retries
      when: inventory_hostname == 'machine1'

    - name: Wait for k6 test to finish on machine2
      async_status:
        jid: "{{ k6_output_2.ansible_job_id }}"
      register: job_result_2
      until: job_result_2.finished
      retries: 60  # Adjust the number of retries based on your needs
      delay: 30    # Wait for 30 seconds between retries
      when: inventory_hostname == 'machine2'

    - debug:
        msg: "k6 test results sent to InfluxDB"
      when: job_result_1.finished and job_result_2.finished
